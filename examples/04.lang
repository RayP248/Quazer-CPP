fn fib (n: number) -> number {
  if n == 0 { return 0; }
  if n == 1 { return 1; }

  let a: number = 0;
  let b: number = 1;
  let c: number = 0;

  for (let i = 1; i < n; i++) {
    c = a + b;
    a = b;
    b = c;
  }

  return c;
}

let nums = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
outln("nums before: ", nums);
outln("Filtering with an offset of 1...");
for (let num of nums) {
  num = fib(num);
}
outln("nums after: ", nums);
