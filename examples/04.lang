fn fib (n: number) -> number {
  if n == 0 { return 0; }
  if n == 1 { return 1; }

  let a: number = 0;
  let b: number = 1;
  let c: number = 0;

  for (let i = 1; i < n; i++) {
    c = a + b;
    a = b;
    b = c;
  }

  return c;
}

let nums: []any = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
outln("nums before: ", nums);
for (let num of nums) {
  num = fib(num);
}

outln("nums after: ", nums);
outln("nums.length: ", nums.length);

let fibs = {
  one: fib(1),
  two: fib(2),
  three: fib(3)
};

outln("one[]: ", fibs["one"]);
outln("two: ", fibs.two);
outln("three[]: ", fibs["three"]);

fibs["four"] = fib(4);
outln("four: ", fibs.four);

fibs.five = fib(5);
outln("five[]: ", fibs["five"].string);

fibs.six = fib(in("Enter a number to be converted into the nth number in the Fibonacci Sequence and stored in fibs.six: ").num);
outln("fib: ", fibs.six);
